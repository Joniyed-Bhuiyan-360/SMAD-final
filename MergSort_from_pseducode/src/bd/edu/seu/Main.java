package bd.edu.seu;public class Main {    public static void main(String[] args) {        int[] arr={4,3,2,1,-23232,0,98923,-99999999,23232};        int[] mergSort = merg_sort(arr);        for (int value : mergSort) {            System.out.print(value + " ");        }    }    private static int[] merg_sort(int[] arr) {        int n=arr.length;        if(n==1)return arr;        int[] l1=new int[n/2];        int[] l2=new int[n-(n/2)];        System.arraycopy(arr, 0, l1, 0, n / 2);        for(int i=(n/2);i<n;i++){            l2[i-(n/2)]=arr[i];        }        int[] half = merg_sort(l1);        int [] remain = merg_sort(l2);        return merg(half,remain);    }    private static int[] merg(int[] l1, int[] l2) {//        List<Integer> temp = new ArrayList<>();//        List<Integer> l1_list = new ArrayList<>();//        List<Integer> l2_list = new ArrayList<>();//        for (int value : l1) {//            l1_list.add(value);//        }//        for (int value : l2) {//            l2_list.add(value);//        }////        int i=0;//        while (l1_list.size()>0 && l2_list.size()>0){//            if(l1_list.get(i)>l2_list.get(i)){//                temp.add(l2_list.get(i));//                l2_list.remove(i);//            }else{//                temp.add(l1_list.get(i));//                l1_list.remove(i);//            }//        }////        while (l1_list.size() > 0) {//            temp.add(l1_list.get(i));//            l1_list.remove(i);//        }//        while (l2_list.size() > 0) {//            temp.add(l2_list.get(i));//            l2_list.remove(i);//        }////        int[] final_result=new int[temp.size()];//        for(i=0;i<temp.size();i++){//            final_result[i]=temp.get(i);//        }        int n = l1.length+l2.length;        int[] temp = new int[n];        int i=0;        int k=0;        while (l1.length>0 && l2.length>0){            if(l1[i]>l2[i]){                temp[k]=l2[i];                l2 = remove_element(l2);                k++;            }else{                temp[k]=l1[i];                l1 = remove_element(l1);                k++;            }        }        while (l1.length > 0) {            temp[k]=l1[i];            l1=remove_element(l1);            k++;        }        while (l2.length > 0) {            temp[k]=l2[i];            l2=remove_element(l2);            k++;        }        return temp;    }    private static int[] remove_element(int[] arr) {        int temp[] = new int[arr.length-1];        for(int i=1;i<arr.length;i++){            temp[i-1]=arr[i];        }        return temp;    }}