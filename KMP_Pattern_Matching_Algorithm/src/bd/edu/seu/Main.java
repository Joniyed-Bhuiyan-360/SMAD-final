package bd.edu.seu;public class Main {    //this is main method    public static void main(String[] args) {        //example from tutorialspoints        String str = "AAAABAAAAABBBAAAAB";        String pattern = "AAAB";        KMP_func(str,pattern);        //example from geeksforgeeks        str = "ABABDABACDABABCABAB";        pattern = "ABABCABAB";        KMP_func(str, pattern);    }    private static void  KMP_func(String str, String pattern) {        //call LPS function for calculate lps table        int[] lps = LPS_func(pattern.toCharArray());        boolean noMatch = true;        int i=0,j=0;        System.out.println("\nText=\""+str+"\""+" and Pattern=\""+pattern+"\"");        while (i < str.length()) {            if (pattern.charAt(j) == str.charAt(i)) {                j++;                i++;            }            //check every time for find matched pattern index number            if (j == pattern.length()) {                System.out.println("Found pattern at index " + (i - j));                j = lps[j - 1];                noMatch = false;            }            else if (i < str.length() && pattern.charAt(j) != str.charAt(i)) {                if (j != 0)                    j = lps[j - 1];                else                    i = i + 1;            }        }        //if no matched pattern found then this will be execute        if(noMatch){            System.out.println("No matched found for this pattern....");        }    }    //this function calculate and return lps table    private static int[] LPS_func(char[] pattern) {        int[] lps = new int[pattern.length];        lps[0]=0;        int j=0;        int i=1;        while (i<pattern.length){            if(pattern[j]==pattern[i]){                lps[i]=j+1;                j++;                i++;            }else{                if(j!=0){                    j=lps[j-1];                }else {                    lps[i] = 0;                    i++;                }            }        }        return lps;    }}